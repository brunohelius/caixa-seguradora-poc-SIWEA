openapi: 3.0.3
info:
  title: SIWEA - Sistema de Liberação de Pagamento de Sinistros
  description: |
    API REST para o sistema SIWEA migrado de IBM VisualAge para .NET 9.0.

    ## Funcionalidades Principais

    - **Busca de Sinistros**: Por protocolo, número ou código líder
    - **Autorização de Pagamento**: Validação, conversão BTNF, registro de transações
    - **Histórico de Pagamentos**: Consulta de autorizações anteriores
    - **Gestão de Fases**: Acompanhamento de workflow
    - **Dashboard**: Métricas de migração e performance

    ## Integrações Externas

    - **CNOUA**: Validação de produtos consórcio (REST)
    - **SIPUA**: Validação de contratos EFP (SOAP)
    - **SIMDA**: Validação de contratos HB (SOAP)

    ## Autenticação

    Todas as rotas (exceto `/health` e `/swagger`) requerem autenticação via JWT Bearer token.

    ## Versionamento

    - Versão atual: `v1`
    - Path base: `/api/v1`
    - Header de versionamento: `X-API-Version: 1`

    ## Rate Limiting

    - Limite: 100 requisições por minuto por IP
    - Header de resposta: `X-RateLimit-Remaining`

    ## Códigos de Erro Padronizados

    - `400` - Bad Request (validação falhou)
    - `401` - Unauthorized (token ausente/inválido)
    - `403` - Forbidden (sem permissão)
    - `404` - Not Found (recurso não encontrado)
    - `409` - Conflict (concorrência/estado inválido)
    - `422` - Unprocessable Entity (regra de negócio violada)
    - `429` - Too Many Requests (rate limit excedido)
    - `500` - Internal Server Error (erro de sistema)
    - `503` - Service Unavailable (serviço externo indisponível)
    - `504` - Gateway Timeout (timeout em serviço externo)

  version: 1.0.0
  contact:
    name: Equipe SIWEA - Caixa Seguradora
    email: siwea-dev@caixaseguradora.com.br
  license:
    name: Proprietary
    url: https://caixaseguradora.com.br/licenses

servers:
  - url: https://api.caixaseguradora.com.br/siwea/v1
    description: Produção
  - url: https://api-hom.caixaseguradora.com.br/siwea/v1
    description: Homologação
  - url: https://localhost:5001/api/v1
    description: Desenvolvimento Local

tags:
  - name: Claims Search
    description: Operações de busca de sinistros
  - name: Payment Authorization
    description: Autorização de pagamentos
  - name: Payment History
    description: Consulta de histórico de pagamentos
  - name: Phase Management
    description: Gestão de fases do sinistro
  - name: Dashboard
    description: Métricas e status de migração
  - name: Health
    description: Health checks e status do sistema

paths:
  # ==================== CLAIMS SEARCH ====================

  /claims/search/protocol:
    post:
      tags:
        - Claims Search
      summary: Buscar sinistro por protocolo
      description: |
        Localiza um sinistro utilizando o número de protocolo completo (FONTE + PROTSINI + DAC).

        ## Regras de Negócio
        - BR-001: Três critérios mutuamente exclusivos
        - BR-002: Obrigatoriedade de critério completo
        - BR-003: Recuperação de dados do registro mestre

        ## Exemplo de Protocolo
        - Formato display: `001/0123456-7`
        - FONTE: 001 (3 dígitos)
        - PROTSINI: 0123456 (7 dígitos)
        - DAC: 7 (1 dígito)
      operationId: searchClaimByProtocol
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchByProtocolRequest'
            examples:
              valid:
                summary: Busca válida
                value:
                  source: 1
                  protocolNumber: 123456
                  dac: 7
      responses:
        '200':
          description: Sinistro encontrado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClaimDetailsResponse'
              examples:
                found:
                  summary: Sinistro localizado
                  value:
                    claimId: "1-10-20-789012"
                    protocol: "001/0123456-7"
                    claimNumber: "10/20/789012"
                    branchName: "AUTOMÓVEIS"
                    insuredName: "JOÃO DA SILVA"
                    productCode: 6814
                    insuranceType: 1
                    expectedReserve: 50000.00
                    totalPaid: 10000.00
                    pendingValue: 40000.00
                    policyNumber: "001/0123456"
                    createdAt: "2024-01-15T10:30:00Z"
                    updatedAt: "2024-10-27T14:35:22Z"
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          description: Protocolo não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                notFound:
                  summary: Protocolo inexistente
                  value:
                    error:
                      code: "CLAIM_NOT_FOUND"
                      message: "PROTOCOLO 001/0123456-7 NAO ENCONTRADO"
                      timestamp: "2024-10-27T14:35:22Z"
                      traceId: "abc123xyz"
        '500':
          $ref: '#/components/responses/InternalServerError'

  /claims/search/number:
    post:
      tags:
        - Claims Search
      summary: Buscar sinistro por número
      description: |
        Localiza um sinistro utilizando o número completo (ORGSIN + RMOSIN + NUMSIN).

        ## Formato do Número
        - Display: `10/20/789012`
        - ORGSIN: 10 (2 dígitos, 01-99)
        - RMOSIN: 20 (2 dígitos, 00-99)
        - NUMSIN: 789012 (6 dígitos, 000001-999999)
      operationId: searchClaimByNumber
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchByClaimNumberRequest'
      responses:
        '200':
          description: Sinistro encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClaimDetailsResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          description: Sinistro não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                notFound:
                  value:
                    error:
                      code: "CLAIM_NOT_FOUND"
                      message: "SINISTRO 10/20/789012 NAO ENCONTRADO"
                      timestamp: "2024-10-27T14:35:22Z"
                      traceId: "def456uvw"
        '500':
          $ref: '#/components/responses/InternalServerError'

  /claims/search/leader:
    post:
      tags:
        - Claims Search
      summary: Buscar sinistro por código líder
      description: |
        Localiza sinistros de resseguro/líder utilizando código líder (CODLIDER + SINLID).

        ## Formato
        - Display: `001/0000001`
        - CODLIDER: 001 (3 dígitos, 001-999)
        - SINLID: 0000001 (7 dígitos, 0000001-9999999)

        ## Uso
        Este critério identifica sinistros onde há participação de líder de resseguro.
      operationId: searchClaimByLeader
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchByLeaderCodeRequest'
      responses:
        '200':
          description: Sinistro encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClaimDetailsResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          description: Líder não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                notFound:
                  value:
                    error:
                      code: "LEADER_NOT_FOUND"
                      message: "LIDER 001/0000001 NAO ENCONTRADO"
                      timestamp: "2024-10-27T14:35:22Z"
                      traceId: "ghi789rst"
        '500':
          $ref: '#/components/responses/InternalServerError'

  # ==================== PAYMENT AUTHORIZATION ====================

  /payments/authorize:
    post:
      tags:
        - Payment Authorization
      summary: Autorizar pagamento de sinistro
      description: |
        **OPERAÇÃO CRÍTICA**: Autoriza um pagamento para um sinistro, incluindo:

        1. Validação de entrada (tipo pagamento, tipo apólice, valores)
        2. Validação de negócio (saldo disponível, beneficiário obrigatório)
        3. Conversão de valores para BTNF (moeda padrão)
        4. Validação externa (CNOUA/SIPUA/SIMDA conforme produto)
        5. Transação ACID de 4 tabelas (histórico, sinistro, acompanhamento, fases)

        ## Regras de Negócio Aplicadas
        - BR-010 a BR-022: Autorização de Pagamento
        - BR-023 a BR-033: Conversão Monetária
        - BR-034 a BR-042: Registro de Transações
        - BR-043 a BR-056: Validação de Produtos
        - BR-057 a BR-067: Gestão de Fases
        - BR-068 a BR-074: Auditoria

        ## Performance
        - Tempo esperado: 5-15 segundos
        - SLA: < 90 segundos
        - Timeout validação externa: 10 segundos

        ## Atomicidade
        Em caso de erro em qualquer etapa, **TODAS** as mudanças são revertidas (ROLLBACK).
      operationId: authorizePayment
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentAuthorizationRequest'
            examples:
              valid:
                summary: Autorização válida
                value:
                  claimId: "1-10-20-789012"
                  paymentType: 1
                  policyType: 1
                  principalValue: 25000.00
                  correctionValue: 500.00
                  beneficiaryName: "João da Silva"
              minimal:
                summary: Sem valor de correção
                value:
                  claimId: "1-10-20-789012"
                  paymentType: 2
                  policyType: 1
                  principalValue: 15000.00
                  correctionValue: 0
                  beneficiaryName: "Maria Santos"
      responses:
        '200':
          description: Pagamento autorizado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentAuthorizationResponse'
              examples:
                success:
                  summary: Autorização bem-sucedida
                  value:
                    success: true
                    transactionId: "TXN-20241027-001"
                    authorizedAmount: 31481.48
                    authorizedAmountBRL: 25500.00
                    conversionRate: 1.23456789
                    newPendingBalance: 8518.52
                    authorizationDate: "2024-10-27T14:35:22Z"
                    operatorId: "OP12345"
                    message: "PAGAMENTO AUTORIZADO COM SUCESSO"
                    validationDetails:
                      service: "CNOUA"
                      ezert8Code: "00000000"
                      validationId: "VAL-20241027-001"
                    transactionDetails:
                      operationsCompleted: 4
                      historyRecordId: 6
                      phasesUpdated:
                        opened: [10]
                        closed: [5]
        '400':
          description: Validação de entrada falhou
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrorResponse'
              examples:
                invalidPaymentType:
                  summary: Tipo de pagamento inválido
                  value:
                    error:
                      code: "VALIDATION_ERROR"
                      message: "Erro de validação"
                      timestamp: "2024-10-27T14:35:22Z"
                      traceId: "jkl012mno"
                      errors:
                        - field: "paymentType"
                          message: "Tipo de Pagamento deve ser 1, 2, 3, 4, ou 5"
                          rejectedValue: 6
                beneficiaryRequired:
                  summary: Beneficiário obrigatório
                  value:
                    error:
                      code: "VALIDATION_ERROR"
                      message: "Beneficiário é obrigatório"
                      timestamp: "2024-10-27T14:35:22Z"
                      traceId: "pqr345stu"
                      errors:
                        - field: "beneficiaryName"
                          message: "Beneficiário é obrigatório para este tipo de seguro"
                          rejectedValue: null
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          description: Sinistro não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Conflito de concorrência
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                concurrency:
                  summary: Sinistro modificado por outro usuário
                  value:
                    error:
                      code: "CONCURRENCY_CONFLICT"
                      message: "SINISTRO FOI MODIFICADO POR OUTRO USUARIO. Por favor, recarregue os dados e tente novamente."
                      timestamp: "2024-10-27T14:35:22Z"
                      traceId: "vwx678yza"
        '422':
          description: Regra de negócio violada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessRuleErrorResponse'
              examples:
                exceedsPending:
                  summary: Valor excede saldo pendente
                  value:
                    error:
                      code: "BUSINESS_RULE_VIOLATION"
                      message: "VALOR EXCEDE SALDO PENDENTE"
                      timestamp: "2024-10-27T14:35:22Z"
                      traceId: "bcd901efg"
                      businessRule:
                        ruleId: "BR-013"
                        ruleName: "Validação de Saldo Disponível"
                        details:
                          requestedAmount: 50000.00
                          pendingBalance: 40000.00
                          exceedingAmount: 10000.00
                currencyRateUnavailable:
                  summary: Taxa de conversão não disponível
                  value:
                    error:
                      code: "CURRENCY_RATE_UNAVAILABLE"
                      message: "TAXA DE CONVERSAO NAO DISPONIVEL PARA A DATA"
                      timestamp: "2024-10-27T14:35:22Z"
                      traceId: "hij234klm"
                      businessRule:
                        ruleId: "BR-024"
                        ruleName: "Taxa BTNF obrigatória"
                        details:
                          businessDate: "2024-10-27"
                validationFailed:
                  summary: Validação de produto falhou
                  value:
                    error:
                      code: "PRODUCT_VALIDATION_FAILED"
                      message: "VALIDACAO CONSORCIO FALHOU: Contrato inválido"
                      timestamp: "2024-10-27T14:35:22Z"
                      traceId: "nop567qrs"
                      businessRule:
                        ruleId: "BR-043"
                        ruleName: "Roteamento de Produtos Consórcio"
                        details:
                          service: "CNOUA"
                          ezert8Code: "EZERT8001"
                          validationMessage: "Contrato de consórcio inválido"
                          productCode: 6814
        '500':
          description: Erro de sistema ou transação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                transactionError:
                  summary: Erro na transação de banco
                  value:
                    error:
                      code: "TRANSACTION_FAILED"
                      message: "ERRO AO PROCESSAR PAGAMENTO. A transação foi revertida."
                      timestamp: "2024-10-27T14:35:22Z"
                      traceId: "tuv890wxy"
        '503':
          description: Serviço externo indisponível
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                circuitBreakerOpen:
                  summary: Circuit breaker aberto
                  value:
                    error:
                      code: "SERVICE_UNAVAILABLE"
                      message: "SERVICO DE VALIDACAO INDISPONIVEL. Tente novamente em alguns instantes."
                      timestamp: "2024-10-27T14:35:22Z"
                      traceId: "zab123cde"
                      retryAfter: 60
        '504':
          description: Timeout em validação externa
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                timeout:
                  summary: Timeout após 3 tentativas
                  value:
                    error:
                      code: "GATEWAY_TIMEOUT"
                      message: "TIMEOUT NA VALIDACAO DE PRODUTO. O serviço externo não respondeu."
                      timestamp: "2024-10-27T14:35:22Z"
                      traceId: "fgh456ijk"
                      details:
                        service: "CNOUA"
                        attempts: 3
                        totalDuration: 32000

  # ==================== PAYMENT HISTORY ====================

  /claims/{claimId}/payments:
    get:
      tags:
        - Payment History
      summary: Consultar histórico de pagamentos
      description: |
        Retorna o histórico completo de autorizações de pagamento para um sinistro.

        ## Ordenação
        - Padrão: Decrescente por data de autorização (mais recente primeiro)
        - Customizável via query parameter `sort`

        ## Paginação
        - Padrão: 20 registros por página
        - Máximo: 100 registros por página
      operationId: getPaymentHistory
      security:
        - bearerAuth: []
      parameters:
        - name: claimId
          in: path
          required: true
          description: ID do sinistro (formato: TIPSEG-ORGSIN-RMOSIN-NUMSIN)
          schema:
            type: string
            pattern: '^\d+-\d+-\d+-\d+$'
            example: "1-10-20-789012"
        - name: page
          in: query
          description: Número da página (inicia em 1)
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: pageSize
          in: query
          description: Registros por página
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
        - name: sort
          in: query
          description: Campo de ordenação
          schema:
            type: string
            enum: [date_desc, date_asc, amount_desc, amount_asc]
            default: date_desc
      responses:
        '200':
          description: Histórico retornado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentHistoryResponse'
              examples:
                withPayments:
                  summary: Sinistro com histórico
                  value:
                    claimId: "1-10-20-789012"
                    totalRecords: 5
                    page: 1
                    pageSize: 20
                    totalPages: 1
                    payments:
                      - occurrenceNumber: 6
                        operationCode: 1098
                        transactionDate: "2024-10-27"
                        transactionTime: "14:35:22"
                        principalValue: 25000.00
                        correctionValue: 500.00
                        totalValueBTNF: 31481.48
                        beneficiaryName: "João da Silva"
                        operatorId: "OP12345"
                        createdAt: "2024-10-27T14:35:22Z"
                      - occurrenceNumber: 5
                        operationCode: 1098
                        transactionDate: "2024-10-20"
                        transactionTime: "10:15:30"
                        principalValue: 10000.00
                        correctionValue: 0
                        totalValueBTNF: 12345.68
                        beneficiaryName: "Maria Santos"
                        operatorId: "OP12345"
                        createdAt: "2024-10-20T10:15:30Z"
                    summary:
                      totalAuthorized: 43827.16
                      totalAuthorizedBRL: 35500.00
                      remainingBalance: 6172.84
                empty:
                  summary: Sinistro sem histórico
                  value:
                    claimId: "1-10-20-789012"
                    totalRecords: 0
                    page: 1
                    pageSize: 20
                    totalPages: 0
                    payments: []
                    summary:
                      totalAuthorized: 0
                      totalAuthorizedBRL: 0
                      remainingBalance: 50000.00
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          description: Sinistro não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          $ref: '#/components/responses/InternalServerError'

  # ==================== PHASE MANAGEMENT ====================

  /claims/{claimId}/phases:
    get:
      tags:
        - Phase Management
      summary: Consultar fases do sinistro
      description: |
        Retorna o histórico completo de fases (workflow) do sinistro.

        ## Interpretação
        - `closingDate = '9999-12-31'`: Fase **aberta** (em andamento)
        - `closingDate = data real`: Fase **fechada** (concluída)
      operationId: getClaimPhases
      security:
        - bearerAuth: []
      parameters:
        - name: claimId
          in: path
          required: true
          schema:
            type: string
            example: "1-10-20-789012"
        - name: includeHistory
          in: query
          description: Incluir fases fechadas (histórico completo)
          schema:
            type: boolean
            default: true
      responses:
        '200':
          description: Fases retornadas com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClaimPhasesResponse'
              examples:
                withPhases:
                  summary: Sinistro com fases
                  value:
                    claimId: "1-10-20-789012"
                    currentPhase:
                      phaseCode: 10
                      phaseName: "Pagamento Processando"
                      eventCode: 1098
                      openingDate: "2024-10-27"
                      closingDate: "9999-12-31"
                      status: "ABERTA"
                      durationDays: 0
                    phaseHistory:
                      - phaseCode: 5
                        phaseName: "Documentação Pendente"
                        eventCode: 1097
                        openingDate: "2024-10-20"
                        closingDate: "2024-10-27"
                        status: "FECHADA"
                        durationDays: 7
                      - phaseCode: 1
                        phaseName: "Registro Inicial"
                        eventCode: 1001
                        openingDate: "2024-10-15"
                        closingDate: "2024-10-20"
                        status: "FECHADA"
                        durationDays: 5
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          description: Sinistro não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          $ref: '#/components/responses/InternalServerError'

  # ==================== DASHBOARD ====================

  /dashboard/migration-status:
    get:
      tags:
        - Dashboard
      summary: Status de migração do projeto
      description: |
        Retorna métricas de progresso da migração Visual Age → .NET 9.0

        ## Dados Retornados
        - Progresso geral (%)
        - Status de user stories (6 stories)
        - Componentes migrados (telas, regras, entidades)
        - Métricas de testes
      operationId: getMigrationStatus
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Status retornado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MigrationStatusResponse'
              examples:
                inProgress:
                  summary: Migração em andamento
                  value:
                    overallProgress: 75.5
                    userStories:
                      - code: "US1"
                        name: "Busca de Sinistros"
                        status: "Completed"
                        completionPercentage: 100
                        requirementsCompleted: 8
                        requirementsTotal: 8
                        testsPassed: 24
                        testsTotal: 24
                      - code: "US2"
                        name: "Autorização de Pagamento"
                        status: "In Progress"
                        completionPercentage: 80
                        requirementsCompleted: 12
                        requirementsTotal: 15
                        testsPassed: 36
                        testsTotal: 45
                    components:
                      screens:
                        migrated: 2
                        total: 2
                        percentage: 100
                      businessRules:
                        migrated: 85
                        total: 100
                        percentage: 85
                      databaseEntities:
                        migrated: 13
                        total: 13
                        percentage: 100
                      externalServices:
                        migrated: 3
                        total: 3
                        percentage: 100
                    lastUpdated: "2024-10-27T14:35:22Z"
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /dashboard/performance-metrics:
    get:
      tags:
        - Dashboard
      summary: Métricas de performance (Visual Age vs .NET)
      description: |
        Compara performance entre sistema legado e sistema migrado.

        ## Métricas
        - Tempo de resposta médio
        - Throughput (transações/segundo)
        - Usuários concorrentes suportados
        - Taxa de erro
      operationId: getPerformanceMetrics
      security:
        - bearerAuth: []
      parameters:
        - name: startDate
          in: query
          description: Data inicial para métricas
          schema:
            type: string
            format: date
            example: "2024-10-01"
        - name: endDate
          in: query
          description: Data final para métricas
          schema:
            type: string
            format: date
            example: "2024-10-27"
      responses:
        '200':
          description: Métricas retornadas
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PerformanceMetricsResponse'
              examples:
                comparison:
                  summary: Comparação de performance
                  value:
                    period:
                      startDate: "2024-10-01"
                      endDate: "2024-10-27"
                    metrics:
                      - component: "Busca de Sinistro"
                        legacyValue: 2.5
                        newValue: 1.2
                        metricType: "response_time"
                        unit: "seconds"
                        improvement: 52
                        passFail: true
                      - component: "Autorização de Pagamento"
                        legacyValue: 45
                        newValue: 75
                        metricType: "throughput"
                        unit: "tps"
                        improvement: 67
                        passFail: true
                      - component: "Sistema Geral"
                        legacyValue: 100
                        newValue: 500
                        metricType: "concurrent_users"
                        unit: "users"
                        improvement: 400
                        passFail: true
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

  # ==================== HEALTH CHECKS ====================

  /health:
    get:
      tags:
        - Health
      summary: Health check básico
      description: Verificação rápida se a API está respondendo
      operationId: healthCheck
      responses:
        '200':
          description: API está saudável
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheckResponse'
              examples:
                healthy:
                  value:
                    status: "Healthy"
                    timestamp: "2024-10-27T14:35:22Z"
                    version: "1.0.0"
        '503':
          description: API não está saudável
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheckResponse'
              examples:
                unhealthy:
                  value:
                    status: "Unhealthy"
                    timestamp: "2024-10-27T14:35:22Z"
                    version: "1.0.0"
                    errors:
                      - "Database connection failed"

  /health/detailed:
    get:
      tags:
        - Health
      summary: Health check detalhado
      description: |
        Verificação completa de todos os componentes:
        - Banco de dados
        - Serviços externos (CNOUA, SIPUA, SIMDA)
        - Memória e CPU
      operationId: detailedHealthCheck
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Status detalhado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedHealthCheckResponse'
              examples:
                allHealthy:
                  summary: Todos componentes saudáveis
                  value:
                    status: "Healthy"
                    timestamp: "2024-10-27T14:35:22Z"
                    version: "1.0.0"
                    components:
                      database:
                        status: "Healthy"
                        responseTime: 15
                        details: "Connected to SIWEADB"
                      cnoua:
                        status: "Healthy"
                        responseTime: 234
                        details: "Circuit closed, 0 failures"
                      sipua:
                        status: "Healthy"
                        responseTime: 456
                        details: "Circuit closed, 0 failures"
                      simda:
                        status: "Healthy"
                        responseTime: 123
                        details: "Circuit closed, 0 failures"
                      memory:
                        status: "Healthy"
                        details: "Used: 512 MB / 4096 MB (12.5%)"
                      cpu:
                        status: "Healthy"
                        details: "Usage: 25%"
                degraded:
                  summary: Componente com problema
                  value:
                    status: "Degraded"
                    timestamp: "2024-10-27T14:35:22Z"
                    version: "1.0.0"
                    components:
                      database:
                        status: "Healthy"
                        responseTime: 15
                      cnoua:
                        status: "Unhealthy"
                        responseTime: null
                        details: "Circuit open (5 consecutive failures)"
                      sipua:
                        status: "Healthy"
                        responseTime: 456
                      simda:
                        status: "Healthy"
                        responseTime: 123
                      memory:
                        status: "Healthy"
                      cpu:
                        status: "Healthy"
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          description: Sistema não está saudável
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedHealthCheckResponse'

# ==================== COMPONENTS ====================

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: |
        Token JWT obtido via autenticação.

        **Formato do header:**
        ```
        Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        ```

        **Tempo de expiração:** 8 horas
        **Refresh:** Endpoint `/auth/refresh` (não documentado nesta spec)

  schemas:
    # ==================== REQUEST SCHEMAS ====================

    SearchByProtocolRequest:
      type: object
      required:
        - source
        - protocolNumber
        - dac
      properties:
        source:
          type: integer
          description: FONTE - Código da fonte (3 dígitos)
          minimum: 1
          maximum: 999
          example: 1
        protocolNumber:
          type: integer
          description: PROTSINI - Número do protocolo (7 dígitos)
          minimum: 1
          maximum: 9999999
          example: 123456
        dac:
          type: integer
          description: DAC - Dígito de controle (1 dígito)
          minimum: 0
          maximum: 9
          example: 7

    SearchByClaimNumberRequest:
      type: object
      required:
        - claimOrigin
        - claimBranch
        - claimNumber
      properties:
        claimOrigin:
          type: integer
          description: ORGSIN - Origem do sinistro (2 dígitos)
          minimum: 1
          maximum: 99
          example: 10
        claimBranch:
          type: integer
          description: RMOSIN - Ramo do sinistro (2 dígitos)
          minimum: 0
          maximum: 99
          example: 20
        claimNumber:
          type: integer
          description: NUMSIN - Número do sinistro (6 dígitos)
          minimum: 1
          maximum: 999999
          example: 789012

    SearchByLeaderCodeRequest:
      type: object
      required:
        - leaderCode
        - leaderClaimNumber
      properties:
        leaderCode:
          type: integer
          description: CODLIDER - Código do líder (3 dígitos)
          minimum: 1
          maximum: 999
          example: 1
        leaderClaimNumber:
          type: integer
          description: SINLID - Número do sinistro no líder (7 dígitos)
          minimum: 1
          maximum: 9999999
          example: 1

    PaymentAuthorizationRequest:
      type: object
      required:
        - claimId
        - paymentType
        - policyType
        - principalValue
      properties:
        claimId:
          type: string
          description: ID do sinistro (formato TIPSEG-ORGSIN-RMOSIN-NUMSIN)
          pattern: '^\d+-\d+-\d+-\d+$'
          example: "1-10-20-789012"
        paymentType:
          type: integer
          description: Tipo de pagamento
          enum: [1, 2, 3, 4, 5]
          example: 1
        policyType:
          type: integer
          description: Tipo de apólice
          enum: [1, 2]
          example: 1
        principalValue:
          type: number
          format: double
          description: Valor principal em BRL (2 casas decimais)
          minimum: 0.01
          maximum: 999999999.99
          example: 25000.00
        correctionValue:
          type: number
          format: double
          description: Valor de correção em BRL (opcional, padrão 0)
          minimum: 0
          maximum: 999999999.99
          default: 0
          example: 500.00
        beneficiaryName:
          type: string
          description: Nome do favorecido/beneficiário (obrigatório se TPSEGU != 0)
          maxLength: 255
          example: "João da Silva"

    # ==================== RESPONSE SCHEMAS ====================

    ClaimDetailsResponse:
      type: object
      properties:
        claimId:
          type: string
          description: ID único do sinistro
          example: "1-10-20-789012"
        protocol:
          type: string
          description: Protocolo formatado (FONTE/PROTSINI-DAC)
          example: "001/0123456-7"
        claimNumber:
          type: string
          description: Número do sinistro formatado (ORGSIN/RMOSIN/NUMSIN)
          example: "10/20/789012"
        branchName:
          type: string
          description: Nome do ramo de seguro
          example: "AUTOMÓVEIS"
        insuredName:
          type: string
          description: Nome do segurado
          example: "JOÃO DA SILVA"
        productCode:
          type: integer
          description: Código do produto
          example: 6814
        insuranceType:
          type: integer
          description: Tipo de seguro
          example: 1
        expectedReserve:
          type: number
          format: double
          description: Saldo a pagar esperado (SDOPAG)
          example: 50000.00
        totalPaid:
          type: number
          format: double
          description: Total já pago (TOTPAG)
          example: 10000.00
        pendingValue:
          type: number
          format: double
          description: Saldo pendente (SDOPAG - TOTPAG)
          example: 40000.00
        policyNumber:
          type: string
          description: Número da apólice
          example: "001/0123456"
        createdAt:
          type: string
          format: date-time
          description: Data de criação do sinistro
          example: "2024-01-15T10:30:00Z"
        updatedAt:
          type: string
          format: date-time
          description: Última atualização
          example: "2024-10-27T14:35:22Z"

    PaymentAuthorizationResponse:
      type: object
      properties:
        success:
          type: boolean
          description: Indica se a autorização foi bem-sucedida
          example: true
        transactionId:
          type: string
          description: ID único da transação
          example: "TXN-20241027-001"
        authorizedAmount:
          type: number
          format: double
          description: Valor autorizado em BTNF (moeda padrão)
          example: 31481.48
        authorizedAmountBRL:
          type: number
          format: double
          description: Valor autorizado em BRL (moeda original)
          example: 25500.00
        conversionRate:
          type: number
          format: double
          description: Taxa de conversão BTNF utilizada
          example: 1.23456789
        newPendingBalance:
          type: number
          format: double
          description: Novo saldo pendente após autorização
          example: 8518.52
        authorizationDate:
          type: string
          format: date-time
          description: Data/hora da autorização
          example: "2024-10-27T14:35:22Z"
        operatorId:
          type: string
          description: ID do operador que autorizou
          example: "OP12345"
        message:
          type: string
          description: Mensagem de sucesso
          example: "PAGAMENTO AUTORIZADO COM SUCESSO"
        validationDetails:
          type: object
          description: Detalhes da validação externa
          properties:
            service:
              type: string
              enum: [CNOUA, SIPUA, SIMDA]
              example: "CNOUA"
            ezert8Code:
              type: string
              description: Código de retorno do serviço
              example: "00000000"
            validationId:
              type: string
              description: ID da validação no serviço externo
              example: "VAL-20241027-001"
        transactionDetails:
          type: object
          description: Detalhes da transação de banco
          properties:
            operationsCompleted:
              type: integer
              description: Número de operações realizadas
              example: 4
            historyRecordId:
              type: integer
              description: ID do registro de histórico (OCORHIST)
              example: 6
            phasesUpdated:
              type: object
              properties:
                opened:
                  type: array
                  items:
                    type: integer
                  description: Fases abertas
                  example: [10]
                closed:
                  type: array
                  items:
                    type: integer
                  description: Fases fechadas
                  example: [5]

    PaymentHistoryResponse:
      type: object
      properties:
        claimId:
          type: string
          example: "1-10-20-789012"
        totalRecords:
          type: integer
          description: Total de registros
          example: 5
        page:
          type: integer
          description: Página atual
          example: 1
        pageSize:
          type: integer
          description: Tamanho da página
          example: 20
        totalPages:
          type: integer
          description: Total de páginas
          example: 1
        payments:
          type: array
          items:
            $ref: '#/components/schemas/PaymentRecord'
        summary:
          type: object
          properties:
            totalAuthorized:
              type: number
              format: double
              description: Total autorizado em BTNF
              example: 43827.16
            totalAuthorizedBRL:
              type: number
              format: double
              description: Total autorizado em BRL
              example: 35500.00
            remainingBalance:
              type: number
              format: double
              description: Saldo remanescente
              example: 6172.84

    PaymentRecord:
      type: object
      properties:
        occurrenceNumber:
          type: integer
          description: Número de ocorrência (OCORHIST)
          example: 6
        operationCode:
          type: integer
          description: Código da operação (sempre 1098)
          example: 1098
        transactionDate:
          type: string
          format: date
          description: Data da transação
          example: "2024-10-27"
        transactionTime:
          type: string
          description: Hora da transação (HH:mm:ss)
          example: "14:35:22"
        principalValue:
          type: number
          format: double
          description: Valor principal em BRL
          example: 25000.00
        correctionValue:
          type: number
          format: double
          description: Valor de correção em BRL
          example: 500.00
        totalValueBTNF:
          type: number
          format: double
          description: Valor total em BTNF
          example: 31481.48
        beneficiaryName:
          type: string
          description: Nome do beneficiário
          example: "João da Silva"
        operatorId:
          type: string
          description: ID do operador
          example: "OP12345"
        createdAt:
          type: string
          format: date-time
          example: "2024-10-27T14:35:22Z"

    ClaimPhasesResponse:
      type: object
      properties:
        claimId:
          type: string
          example: "1-10-20-789012"
        currentPhase:
          $ref: '#/components/schemas/PhaseRecord'
        phaseHistory:
          type: array
          items:
            $ref: '#/components/schemas/PhaseRecord'

    PhaseRecord:
      type: object
      properties:
        phaseCode:
          type: integer
          description: Código da fase
          example: 10
        phaseName:
          type: string
          description: Nome da fase
          example: "Pagamento Processando"
        eventCode:
          type: integer
          description: Código do evento que abriu a fase
          example: 1098
        openingDate:
          type: string
          format: date
          description: Data de abertura
          example: "2024-10-27"
        closingDate:
          type: string
          format: date
          description: Data de fechamento ('9999-12-31' se aberta)
          example: "9999-12-31"
        status:
          type: string
          enum: [ABERTA, FECHADA]
          example: "ABERTA"
        durationDays:
          type: integer
          description: Duração em dias (0 se aberta)
          example: 0

    MigrationStatusResponse:
      type: object
      properties:
        overallProgress:
          type: number
          format: double
          description: Progresso geral (%)
          example: 75.5
        userStories:
          type: array
          items:
            $ref: '#/components/schemas/UserStoryStatus'
        components:
          type: object
          properties:
            screens:
              $ref: '#/components/schemas/ComponentProgress'
            businessRules:
              $ref: '#/components/schemas/ComponentProgress'
            databaseEntities:
              $ref: '#/components/schemas/ComponentProgress'
            externalServices:
              $ref: '#/components/schemas/ComponentProgress'
        lastUpdated:
          type: string
          format: date-time
          example: "2024-10-27T14:35:22Z"

    UserStoryStatus:
      type: object
      properties:
        code:
          type: string
          example: "US1"
        name:
          type: string
          example: "Busca de Sinistros"
        status:
          type: string
          enum: [Not Started, In Progress, Completed, Blocked]
          example: "Completed"
        completionPercentage:
          type: number
          format: double
          example: 100
        requirementsCompleted:
          type: integer
          example: 8
        requirementsTotal:
          type: integer
          example: 8
        testsPassed:
          type: integer
          example: 24
        testsTotal:
          type: integer
          example: 24

    ComponentProgress:
      type: object
      properties:
        migrated:
          type: integer
          example: 2
        total:
          type: integer
          example: 2
        percentage:
          type: number
          format: double
          example: 100

    PerformanceMetricsResponse:
      type: object
      properties:
        period:
          type: object
          properties:
            startDate:
              type: string
              format: date
              example: "2024-10-01"
            endDate:
              type: string
              format: date
              example: "2024-10-27"
        metrics:
          type: array
          items:
            $ref: '#/components/schemas/PerformanceMetric'

    PerformanceMetric:
      type: object
      properties:
        component:
          type: string
          example: "Busca de Sinistro"
        legacyValue:
          type: number
          format: double
          description: Valor do sistema legado
          example: 2.5
        newValue:
          type: number
          format: double
          description: Valor do sistema migrado
          example: 1.2
        metricType:
          type: string
          enum: [response_time, throughput, concurrent_users, memory_usage, error_rate]
          example: "response_time"
        unit:
          type: string
          description: Unidade de medida
          example: "seconds"
        improvement:
          type: number
          format: double
          description: Percentual de melhoria
          example: 52
        passFail:
          type: boolean
          description: Se atingiu critério de aceitação
          example: true

    HealthCheckResponse:
      type: object
      properties:
        status:
          type: string
          enum: [Healthy, Degraded, Unhealthy]
          example: "Healthy"
        timestamp:
          type: string
          format: date-time
          example: "2024-10-27T14:35:22Z"
        version:
          type: string
          example: "1.0.0"
        errors:
          type: array
          items:
            type: string
          example: []

    DetailedHealthCheckResponse:
      allOf:
        - $ref: '#/components/schemas/HealthCheckResponse'
        - type: object
          properties:
            components:
              type: object
              additionalProperties:
                $ref: '#/components/schemas/ComponentHealth'

    ComponentHealth:
      type: object
      properties:
        status:
          type: string
          enum: [Healthy, Degraded, Unhealthy]
          example: "Healthy"
        responseTime:
          type: integer
          description: Tempo de resposta em ms
          example: 15
          nullable: true
        details:
          type: string
          example: "Connected to SIWEADB"

    # ==================== ERROR SCHEMAS ====================

    ErrorResponse:
      type: object
      properties:
        error:
          type: object
          properties:
            code:
              type: string
              description: Código do erro
              example: "CLAIM_NOT_FOUND"
            message:
              type: string
              description: Mensagem de erro em português
              example: "PROTOCOLO 001/0123456-7 NAO ENCONTRADO"
            timestamp:
              type: string
              format: date-time
              example: "2024-10-27T14:35:22Z"
            traceId:
              type: string
              description: ID de rastreamento para logs
              example: "abc123xyz"
            retryAfter:
              type: integer
              description: Segundos até retry (apenas em 503)
              example: 60
              nullable: true
            details:
              type: object
              description: Detalhes adicionais do erro
              nullable: true

    ValidationErrorResponse:
      type: object
      properties:
        error:
          type: object
          properties:
            code:
              type: string
              example: "VALIDATION_ERROR"
            message:
              type: string
              example: "Erro de validação"
            timestamp:
              type: string
              format: date-time
              example: "2024-10-27T14:35:22Z"
            traceId:
              type: string
              example: "jkl012mno"
            errors:
              type: array
              items:
                $ref: '#/components/schemas/FieldError'

    FieldError:
      type: object
      properties:
        field:
          type: string
          description: Nome do campo com erro
          example: "paymentType"
        message:
          type: string
          description: Mensagem de erro específica
          example: "Tipo de Pagamento deve ser 1, 2, 3, 4, ou 5"
        rejectedValue:
          description: Valor rejeitado
          nullable: true
          example: 6

    BusinessRuleErrorResponse:
      type: object
      properties:
        error:
          type: object
          properties:
            code:
              type: string
              example: "BUSINESS_RULE_VIOLATION"
            message:
              type: string
              example: "VALOR EXCEDE SALDO PENDENTE"
            timestamp:
              type: string
              format: date-time
              example: "2024-10-27T14:35:22Z"
            traceId:
              type: string
              example: "bcd901efg"
            businessRule:
              $ref: '#/components/schemas/BusinessRuleViolation'

    BusinessRuleViolation:
      type: object
      properties:
        ruleId:
          type: string
          description: ID da regra de negócio violada
          example: "BR-013"
        ruleName:
          type: string
          description: Nome da regra
          example: "Validação de Saldo Disponível"
        details:
          type: object
          description: Detalhes específicos da violação
          additionalProperties: true
          example:
            requestedAmount: 50000.00
            pendingBalance: 40000.00
            exceedingAmount: 10000.00

  # ==================== COMMON RESPONSES ====================

  responses:
    BadRequest:
      description: Requisição inválida
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ValidationErrorResponse'

    Unauthorized:
      description: Não autenticado ou token inválido
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          examples:
            missingToken:
              summary: Token ausente
              value:
                error:
                  code: "UNAUTHORIZED"
                  message: "Token de autenticação não fornecido"
                  timestamp: "2024-10-27T14:35:22Z"
                  traceId: "lmn345opq"
            invalidToken:
              summary: Token inválido
              value:
                error:
                  code: "INVALID_TOKEN"
                  message: "Token de autenticação inválido ou expirado"
                  timestamp: "2024-10-27T14:35:22Z"
                  traceId: "rst678uvw"

    InternalServerError:
      description: Erro interno do servidor
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          examples:
            generic:
              summary: Erro genérico
              value:
                error:
                  code: "INTERNAL_SERVER_ERROR"
                  message: "Erro interno do servidor. Por favor, tente novamente."
                  timestamp: "2024-10-27T14:35:22Z"
                  traceId: "xyz901abc"

# ==================== END OF OPENAPI SPEC ====================
