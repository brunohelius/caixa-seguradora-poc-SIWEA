# Multi-stage build for .NET 9.0 backend
FROM mcr.microsoft.com/dotnet/sdk:9.0 AS build-env
WORKDIR /app

# Copy solution and project files
COPY backend/*.sln ./
COPY backend/src/CaixaSeguradora.Api/*.csproj ./src/CaixaSeguradora.Api/
COPY backend/src/CaixaSeguradora.Core/*.csproj ./src/CaixaSeguradora.Core/
COPY backend/src/CaixaSeguradora.Infrastructure/*.csproj ./src/CaixaSeguradora.Infrastructure/

# Restore dependencies
RUN dotnet restore

# Copy everything else
COPY backend/ ./

# Build and publish
RUN dotnet publish src/CaixaSeguradora.Api/CaixaSeguradora.Api.csproj -c Release -o out

# Runtime image
FROM mcr.microsoft.com/dotnet/aspnet:9.0
WORKDIR /app

# Install curl for health checks
RUN apt-get update && apt-get install -y curl && rm -rf /var/lib/apt/lists/*

# Copy published app from build stage
COPY --from=build-env /app/out .

# Create non-root user
RUN useradd -m -u 1000 appuser && chown -R appuser:appuser /app
USER appuser

# Expose ports
EXPOSE 5000
EXPOSE 5001

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:5000/health || exit 1

# Set environment variables
ENV ASPNETCORE_URLS="http://+:5000;https://+:5001" \
    ASPNETCORE_ENVIRONMENT="Production" \
    DOTNET_RUNNING_IN_CONTAINER="true" \
    DOTNET_SYSTEM_GLOBALIZATION_INVARIANT="false"

# Run the application
ENTRYPOINT ["dotnet", "CaixaSeguradora.Api.dll"]